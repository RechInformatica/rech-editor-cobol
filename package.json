{
	"name": "rech-editor-cobol",
	"displayName": "Rech COBOL",
	"description": "Edit COBOL files with vscode.",
	"version": "1.0.137",
	"publisher": "rechinformatica",
	"engines": {
		"vscode": "^1.47.0"
	},
	"icon": "images/cobol.png",
	"license": "MIT",
	"homepage": "https://github.com/RechInformatica/rech-editor-cobol",
	"bugs": {
		"url": "https://github.com/RechInformatica/rech-editor-cobol/issues",
		"email": "infra@rech.com.br"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/RechInformatica/rech-editor-cobol.git"
	},
	"categories": [
		"Programming Languages",
		"Snippets",
		"Other"
	],
	"activationEvents": [
		"onLanguage:COBOL"
	],
	"main": "./out/extension.js",
	"types": "./out/extension.d.ts",
	"contributes": {
		"taskDefinitions": [
			{
				"type": "co",
				"properties": {
					"source": {
						"type": "string",
						"description": "Source to be compiled."
					}
				},
				"required": []
			}
		],
		"configuration": {
			"type": "object",
			"title": "Rech COBOL configurations",
			"properties": {
				"rech.editor.cobol.tabstops": {
					"type": "array",
					"items": {
						"type": "number",
						"title": "tabstops",
						"properties": {
							"tabstop": {
								"type": "number",
								"description": "tabstop"
							}
						}
					},
					"default": [
						0,
						7,
						11,
						19,
						29,
						34,
						50
					],
					"description": "COBOL tabstops."
				},
				"rech.editor.cobol.showConditionalBlockCobolFlow": {
                    "type": [
                        "boolean",
                        "boolean"
                    ],
                    "enum": [
                        false,
                        true
                    ],
                    "description": "Show conditional blocks on COBOL Flow Tree View.",
                    "default": true
                },
				"rech.editor.cobol.formatter.location": {
					"type": "string",
					"description": "External COBOL formatter location."
				},
				"rech.editor.cobol.snippetsRepositories": {
					"type": "array",
					"description": "Repositories where JSON snippets are located."
				},
				"rech.editor.cobol.variableSuggestion": {
					"type": "boolean",
					"description": "Controls whether COBOL variable suggestion is allowed.",
					"default": true
				},
				"rech.editor.cobol.folding": {
					"type": "boolean",
					"description": "Controls whether COBOL folding is allowed.",
					"default": true
				},
				"rech.editor.cobol.diagnoseCopy": {
					"type": "boolean",
					"description": "Controls whether should diagnose copy files.",
					"default": true
				},
				"rech.editor.cobol.log": {
					"type": "boolean",
					"description": "Controls whether Rech COBOL extension logging is active.\nFind log files in your system temporary folder, i.e. %TEMP%\\RechCobolLogs.",
					"default": false
				},
				"rech.editor.cobol.maxCacheTimeFromExpandedSource": {
					"type": "number",
					"description": "Sets maximum time to keep expanded source cache in milliseconds.",
					"default": 30000
				},
				"rech.editor.cobol.returnsLastCacheFromExpandedSource": {
					"type": "boolean",
					"description": "Indicates whether to return the last cache when reaching the maximum cache time.",
					"default": true
				},
				"rech.editor.cobol.invertEspecialColorsInLightTheme": {
					"type": "boolean",
					"description": "Controls whether specials colors should be reversed when using a light theme.",
					"default": false
				},
				"rech.editor.cobol.verboseSuggestion": {
					"type": "boolean",
					"description": "Uses verbose suggestion as cluase 'is' in 'pic' or 'value'.",
					"default": true
				},
				"rech.editor.cobol.especialColors": {
					"type": "object",
					"description": "Special color settings for terms interpreted by the Rech COBOL extension.",
					"default": {
						"rechdocToken": "#b294bb",
						"rechdocVariable": "#c5c8c6",
						"localScopeVariable": "#a3e4c1",
						"rechAutoDocumentation": "#6a9955"
					}
				},
				"rech.editor.cobol.specialAutoDocumentation": {
					"type": "boolean",
					"description": "Controls whether special auto documentation of some language objects is active.",
					"default": false
				}
			}
		},
		"configurationDefaults": {
			"[COBOL]": {
				"files.autoGuessEncoding": false,
				"files.encoding": "windows1252",
				"editor.formatOnType": true,
				"editor.rulers": [
					120
				],
				"editor.detectIndentation": true,
				"editor.tabSize": 3,
				"editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",
				"editor.trimAutoWhitespace": false,
				"editor.useTabStops": false,
				"editor.guides.indentation": false
			}
		},
		"languages": [
			{
				"id": "COBOL",
				"aliases": [
					"Cobol",
					"cobol"
				],
				"firstLine": ".*(\\$[sS][eE][tT]|[pP][rR][oO][gG][rR][aA][mM]\\-[iI][dD]|[iI][dD][eE][nN][tT][iI][fF][iI][cC][aA][tT][iI][oO][nN]).*",
				"extensions": [
					".cbl",
					".cob",
					".cpy",
					".cpb",
					".tpl"
				],
				"configuration": "./cobol.configuration.json"
			}
		],
		"grammars": [
			{
				"language": "COBOL",
				"scopeName": "source.cobol",
				"path": "./syntaxes/COBOL.tmLanguage.json"
			}
		],
				"snippets": [
			{
				"language": "COBOL",
				"path": "./snippets/cobol.json"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "cobolflow",
					"title": "COBOL Flow",
					"icon": "images/sourceflow/flow.svg"
				}
			]
		},
		"views": {
			"cobolflow": [
				{
					"id": "cobolflowview",
					"name": "COBOL Flow View"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "rech.editor.cobol.flowparser",
					"when": "view == cobolflowview",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "rech.editor.cobol.gotoFlowLine",
					"when": "view == cobolflowview",
					"group": "inline"
				}
			],
			"editor/context": [
				{
					"command": "rech.editor.cobol.flowparser",
					"when": "editorTextFocus && editorLangId == 'COBOL'",
					"group": "cobol"
				}
			]
		},
		"commands": [
			{
				"command": "rech.editor.cobol.gotoFlowLine",
				"title": "Rech COBOL: Go to selected line in flow view",
				"enablement": "view == cobolflowview",
				"icon": {
					"dark": "images/sourceflow/goto-icon-dark.svg",
					"light": "images/sourceflow/goto-icon-light.svg"
				}
			},
			{
				"command": "rech.editor.cobol.flowparser",
				"title": "Rech COBOL: Analyze source code flow",
				"icon": {
					"dark": "images/sourceflow/flow-parser-dark.svg",
					"light": "images/sourceflow/flow-parser-light.svg"
				}
			},
			{
				"command": "rech.editor.cobol.cobolInsertStartComment",
				"title": "Rech COBOL: Inserts a '*>->' comment at the begginig of the current line"
			},
			{
				"command": "rech.editor.cobol.cobolInsertEndComment",
				"title": "Rech COBOL: Inserts a '<-<*' comment at the end of the current line"
			},
			{
				"command": "rech.editor.cobol.cobolInsertCommentLine",
				"title": "Rech COBOL: Inserts a new comment line starting with '*>->'"
			},
			{
				"command": "rech.editor.cobol.cobolInsertLineSeparator",
				"title": "Rech COBOL: Inserts Cobol-separator line comment"
			},
			{
				"command": "rech.editor.cobol.tab",
				"title": "Rech COBOL: Performs a tab and sets the cursor on the most appropriate Cobol column"
			},
			{
				"command": "rech.editor.cobol.revtab",
				"title": "Rech COBOL: Performs a reverse-tab and sets the cursor on the most appropriate Cobol column"
			},
			{
				"command": "rech.editor.cobol.findNextParagraph",
				"title": "Rech COBOL: Sets cursor on the previous paragraph declaration"
			},
			{
				"command": "rech.editor.cobol.findPreviousParagraph",
				"title": "Rech COBOL: Sets cursor on the next paragraph declaration"
			},
			{
				"command": "rech.editor.cobol.indent",
				"title": "Rech COBOL: Indents selected range or indents current line when no range is selected"
			},
			{
				"command": "rech.editor.cobol.indentLeft",
				"title": "Rech COBOL: Indents source to left"
			},
			{
				"command": "rech.editor.cobol.indentRight",
				"title": "Rech COBOL: Indents source to right"
			},
			{
				"command": "rech.editor.cobol.indentParagraph",
				"title": "Rech COBOL: Indents whole paragraph"
			},
			{
				"command": "rech.editor.cobol.cursorPos51",
				"title": "Rech COBOL: Sets cursor at position 51"
			},
			{
				"command": "rech.editor.cobol.cursorPos12",
				"title": "Rech COBOL: Sets cursor at position 12"
			},
			{
				"command": "rech.editor.cobol.cursorPos30",
				"title": "Rech COBOL: Sets cursor at position 30"
			},
			{
				"command": "rech.editor.cobol.cursorPos20",
				"title": "Rech COBOL: Sets cursor at position 20"
			},
			{
				"command": "rech.editor.cobol.cursorPos35",
				"title": "Rech COBOL: Sets cursor at position 35"
			},
			{
				"command": "rech.editor.cobol.cursorPos08",
				"title": "Rech COBOL: Sets cursor at position 08"
			},
			{
				"command": "rech.editor.cobol.insertTodo",
				"title": "Rech COBOL: Inserts a Cobol 'TODO' comment line"
			},
			{
				"command": "rech.editor.cobol.cobolLineEndDot",
				"title": "Rech COBOL: Inserts a '.' at the end of the line if missing"
			},
			{
				"command": "rech.editor.cobol.cobolLineEndComma",
				"title": "Rech COBOL: Inserts a ',' at the end of the line if missing"
			},
			{
				"command": "rech.editor.cobol.cobolInvertMoveOperators",
				"title": "Rech COBOL: Invert variables on the 'move' command"
			},
			{
				"command": "rech.editor.cobol.centralizeComment",
				"title": "Rech COBOL: Centers Cobol comment"
			},
			{
				"command": "rech.editor.cobol.showElementProperties",
				"title": "Rech COBOL: Shows Cobol element properties"
			},
			{
				"command": "rech.editor.cobol.extractParagraph",
				"title": "Rech COBOL: Extract selected lines to a new paragraph"
			}
		],
		"keybindings": [
			{
				"command": "rech.editor.cobol.cobolInsertStartComment",
				"key": "alt+numpad_multiply",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cobolInsertEndComment",
				"key": "ctrl+shift+numpad_multiply",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cobolInsertCommentLine",
				"key": "alt+n",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cobolInsertLineSeparator",
				"key": "alt+numpad_subtract",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.tab",
				"key": "tab",
				"when": "editorLangId == COBOL && !inSnippetMode"
			},
			{
				"command": "rech.editor.cobol.revtab",
				"key": "shift+tab",
				"when": "editorLangId == COBOL && !inSnippetMode"
			},
			{
				"command": "rech.editor.cobol.findNextParagraph",
				"key": "alt+k",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.findPreviousParagraph",
				"key": "alt+shift+k",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.indent",
				"key": "alt+shift+f",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.indentLeft",
				"key": "alt+shift+left",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.indentRight",
				"key": "alt+shift+right",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cursorPos51",
				"key": "ctrl+1",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cursorPos12",
				"key": "ctrl+2",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cursorPos30",
				"key": "ctrl+3",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cursorPos20",
				"key": "ctrl+4",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cursorPos35",
				"key": "ctrl+5",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cursorPos08",
				"key": "ctrl+8",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.insertTodo",
				"key": "ctrl+shift+d",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cobolLineEndDot",
				"key": "alt+oem_period",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cobolLineEndComma",
				"key": "alt+oem_comma",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.cobolInvertMoveOperators",
				"key": "ctrl+alt+d",
				"when": "editorLangId == COBOL"
			},
			{
				"command": "rech.editor.cobol.showElementProperties",
				"key": "shift+alt+q",
				"when": "editorLangId == COBOL"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"package": "vsce package --out F:/DIV/VSCode/extension/market/rech-editor-cobol/rech-editor-cobol.vsix",
		"compile": "node ./node_modules/vscode/bin/install && npm run tslint && tsc --build --force ./tsconfig.json",
		"watch": "tsc -watch -p ./",
		"test": "npm run compile && mocha -r ts-node/register ./src/test/**/*.test.ts",
		"tslint": "tslint --project tsconfig.json --config tslint.json"
	},
	"dependencies": {
		"@types/chai": "4.1.6",
		"@types/iconv-lite": "0.0.1",
		"@types/q": "^1.0.0",
		"chai": "4.2.0",
		"iconv-lite": "^0.4.24",
		"q": "^1.4.1",
		"ts-node": "^7.0.1",
		"tslint": "^5.14.0",
		"vscode-languageserver": "^6.1.0-next.9",
		"vscode-languageclient": "^6.1.0-next.9",
		"vscode-languageserver-textdocument": "^1.0.1",
		"rech-ts-commons": "^1.0.0"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.48",
		"@types/node": "^8.10.25",
		"mocha": "^5.2.0",
		"typescript": "^3.0.0",
		"vsce": "^1.53.0",
		"vscode": "^1.1.21"
	},
	"__metadata": {
		"id": "ab0c1faa-36ab-4b7d-ae3f-d8b9456b89fd",
		"publisherDisplayName": "rechinformatica",
		"publisherId": "bca70ba0-6bb8-40cf-9663-39e27de4febf"
	}
}
